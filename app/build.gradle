buildscript {
    ext.kotlin_version = '1.0.1-2'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // Method count plugin
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.5.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "org.imozerov.streetartview"
        minSdkVersion 17
        targetSdkVersion 21
        versionCode 11
        versionName "1.4.5"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

final RUNNER_VERSION = '0.4.1'
final ESPRESSO_VERSION = '2.2.2'
final SUPPORT_LIB_VERSION = '23.3.0'
final PLAY_SERVICES_VERSION = '8.4.0'
final DAGGER2_VERSION = '2.2'
final ANKO_VERSION = '0.8.3'
final RX_VERSION = '1.1.0'
final RX_BINDING_VERSION = '0.3.0'
final RETROFIT_VERSION = '2.0.0-beta2'
final LEAK_CANARY_VERSION = '1.3.1'

kapt {
    generateStubs = true
}

configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:${SUPPORT_LIB_VERSION}"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // PRODUCTION //

    // kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // dagger 2
    kapt "com.google.dagger:dagger-compiler:${DAGGER2_VERSION}"
    compile "com.google.dagger:dagger:${DAGGER2_VERSION}"
    compile 'javax.annotation:jsr250-api:1.0'

    // support libs
    compile "com.android.support:appcompat-v7:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:recyclerview-v7:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:cardview-v7:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:support-v4:${SUPPORT_LIB_VERSION}"
    compile "com.android.support:design:${SUPPORT_LIB_VERSION}"

    // play services
    compile "com.google.android.gms:play-services-maps:${PLAY_SERVICES_VERSION}"
    compile "com.google.android.gms:play-services-analytics:${PLAY_SERVICES_VERSION}"
    compile "com.google.android.gms:play-services-location:${PLAY_SERVICES_VERSION}"
    compile 'com.google.maps.android:android-maps-utils:0.4.3'

    // anko
    compile "org.jetbrains.anko:anko-sdk15:${ANKO_VERSION}"
    compile "org.jetbrains.anko:anko-support-v4:${ANKO_VERSION}"

    // rx
    compile "io.reactivex:rxandroid:${RX_VERSION}"
    compile "io.reactivex:rxjava:${RX_VERSION}"
    compile "com.jakewharton.rxbinding:rxbinding:${RX_BINDING_VERSION}"
    compile "com.jakewharton.rxbinding:rxbinding-appcompat-v7:${RX_BINDING_VERSION}"

    // retrofit
    compile "com.squareup.retrofit:retrofit:${RETROFIT_VERSION}"
    compile "com.squareup.retrofit:converter-gson:${RETROFIT_VERSION}"
    compile "com.squareup.retrofit:adapter-rxjava:${RETROFIT_VERSION}"

    // glide
    compile 'com.github.bumptech.glide:glide:3.7.0'

    // PhotoView to zoom ImageView in and out.
    compile 'com.commit451:PhotoView:1.2.5'

    // Swipe back to detail view
    compile 'com.github.liuguangqiang.swipeback:library:1.0.2@aar'

    // BottomSheet library
    compile 'com.flipboard:bottomsheet-core:1.5.0'
    compile 'com.flipboard:bottomsheet-commons:1.5.0'

    // Bottom navigation bar
    compile 'com.roughike:bottom-bar:1.3.3'

    // DEBUGGING, TESTING //

    // leak canary
    debugCompile "com.squareup.leakcanary:leakcanary-android:${LEAK_CANARY_VERSION}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${LEAK_CANARY_VERSION}"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${LEAK_CANARY_VERSION}"

    // on-device tests
    androidTestCompile "com.android.support.test:runner:${RUNNER_VERSION}"
    androidTestCompile "com.android.support.test:rules:${RUNNER_VERSION}"
    androidTestCompile "com.android.support.test.espresso:espresso-core:${ESPRESSO_VERSION}"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${ESPRESSO_VERSION}"

    // jvm tests
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-core:1.1'
    testCompile 'org.hamcrest:hamcrest-library:1.1'
    testCompile 'org.hamcrest:hamcrest-integration:1.1'
    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.mockito:mockito-core:1.10.19'

}

// To prevent the "superClassName is empty" error for classes not annotated as tests
tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class" // whatever Ant pattern matches your test class files
}
